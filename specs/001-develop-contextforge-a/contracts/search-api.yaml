openapi: 3.0.3
info:
  title: ContextForge Search API
  description: API endpoints for searching and filtering context artifacts
  version: 1.0.0

paths:
  /api/search:
    get:
      summary: Search context artifacts
      description: Search artifacts using text, semantic, or filtered queries
      parameters:
        - name: q
          in: query
          description: Search query string
          schema:
            type: string
        - name: type
          in: query
          description: Search type
          schema:
            type: string
            enum: [text, semantic, hybrid]
            default: hybrid
        - name: categories
          in: query
          description: Filter by categories (comma-separated)
          schema:
            type: string
        - name: sourceType
          in: query
          description: Filter by source type
          schema:
            type: string
            enum: [manual, github, local, imported]
        - name: optimized
          in: query
          description: Filter by optimization status
          schema:
            type: boolean
        - name: limit
          in: query
          description: Number of results to return
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
        - name: offset
          in: query
          description: Number of results to skip
          schema:
            type: integer
            minimum: 0
            default: 0
        - name: sort
          in: query
          description: Sort order
          schema:
            type: string
            enum: [relevance, created_at, updated_at, name]
            default: relevance
        - name: order
          in: query
          description: Sort direction
          schema:
            type: string
            enum: [asc, desc]
            default: desc
      responses:
        200:
          description: Search results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResults'
        400:
          description: Invalid search parameters

  /api/search/suggest:
    get:
      summary: Get search suggestions
      description: Get auto-complete suggestions based on partial query
      parameters:
        - name: q
          in: query
          required: true
          description: Partial query string
          schema:
            type: string
        - name: limit
          in: query
          description: Maximum number of suggestions
          schema:
            type: integer
            minimum: 1
            maximum: 10
            default: 5
      responses:
        200:
          description: Search suggestions
          content:
            application/json:
              schema:
                type: object
                properties:
                  suggestions:
                    type: array
                    items:
                      type: string

  /api/search/filters:
    get:
      summary: Get available search filters
      description: Get all available filter options for faceted search
      responses:
        200:
          description: Available filters
          content:
            application/json:
              schema:
                type: object
                properties:
                  categories:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                        count:
                          type: integer
                  sourceTypes:
                    type: array
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                        count:
                          type: integer
                  fileTypes:
                    type: array
                    items:
                      type: object
                      properties:
                        extension:
                          type: string
                        count:
                          type: integer

components:
  schemas:
    SearchResults:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/SearchResult'
        totalCount:
          type: integer
        hasMore:
          type: boolean
        facets:
          type: object
          properties:
            categories:
              type: array
              items:
                type: object
                properties:
                  name:
                    type: string
                  count:
                    type: integer
        searchTime:
          type: integer
          description: Search time in milliseconds

    SearchResult:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        type:
          type: string
        content:
          type: string
          description: Snippet of matching content
        categories:
          type: array
          items:
            type: string
        sourceType:
          type: string
        isOptimized:
          type: boolean
        relevanceScore:
          type: number
          minimum: 0
          maximum: 1
        highlights:
          type: array
          items:
            type: object
            properties:
              field:
                type: string
              matches:
                type: array
                items:
                  type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time